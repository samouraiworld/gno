package samdao

import (
	"gno.land/p/demo/blog"
	"gno.land/p/samourai/basedao"
	"gno.land/p/samourai/daocond"
	"gno.land/p/samourai/daokit"
	"gno.land/p/samourai/project_manager"
	"gno.land/p/samourai/role_manager"
	"gno.land/r/demo/profile"
)

var (
	DAO        daokit.DAO
	daoPrivate *basedao.DAOPrivate
	pm         *project_manager.ProjectManager
	samBlog    = &blog.Blog{
		Title:  "Samouraï Coop Blog",
		Prefix: "/r/samourai/samdao:blog:",
	}
)

func init() {
	pm = project_manager.New()

	// ⚠️ Roles Description partially generated by A.I
	initialRoles := []role_manager.RoleInfo{
		{Name: "CEO", Description: "Elected for 4 years by employees and stakeholders, the CEO defines long-term company strategy, appoints project leaders (with at least 30% support), and oversees all operations. Can be revoked by vote of leaders, employees, and core members if a new strategic candidate emerges."},
		{Name: "Stakeholder", Description: "Holders of at least one stake (e.g., 50€) with CDD/CDI contracts. Stakeholders can vote on CEO scope decisions, including major investments and leadership elections, and receive a share of company net revenues."},
		{Name: "Employee", Description: "Full-time or part-time workers under CDD/CDI contracts. They receive revenue shares based on hours worked, seniority, and collective impact, and participate in key decision-making if also stakeholders."},
		{Name: "Freelance", Description: "Contributors without formal contracts. They receive performance-based bonuses proposed by team leaders and validated by stakeholders and employees."},
		{Name: "Newcomer Freelance", Description: "Freelancers with under one year of collaboration. They are in an observation and contribution phase, eligible for bonuses depending on early contributions but without decision-making involvement."},
		{Name: "Core Tech Infra", Description: "Trusted developers with full access to Samouraï Coop's technical infrastructure. They are responsible for the maintenance and evolution of core systems, and usually part of the most experienced contributors."},
		{Name: "Social Manager", Description: "Responsible for managing Samouraï Coop’s social channels. Authorized to post official content, coordinate communication campaigns, and ensure alignment with the cooperative’s branding and values."},
		{Name: "Prod Team Leader", Description: "Leads prod-related projects. Assigns team members, coordinates with clients, ensures timely delivery, and collaborates with AdminOps to guarantee contributors are paid properly. Reports to the CEO."},
		{Name: "Prod Team Member", Description: "Contributes to media production and project execution under the guidance of the Prod Team Leader. Works on content creation, client deliverables, and supports internal communication efforts."},
		{Name: "Tech Team Leader", Description: "Oversees all tech projects and team members. Assigns roles, ensures project delivery, and collaborates with AdminOps for payments."},
		{Name: "Tech Team Member", Description: "Works under the guidance of the Tech Team Leader to develop, maintain, and deliver technical projects. Participates in collaborative coding, reviews, and client-focused problem solving."},
		{Name: "Accountability", Description: "Handles company finances and payrolls. Has treasury access and proposes payments, which must be validated by team leaders. Ensures accurate year-end revenue reports and distribution planning."},
	}

	// replaces by addr
	initialMembers := []basedao.Member{
		{Address: "g19t5xyl2h0v7rd8mugeqj27na87582znm48hmcm", Roles: []string{"CEO", "Stakeholder", "Tech Team Leader"}},
		{Address: "g1z982f9zx78avq7f09nn8nw8urdj456dg2d2wqr", Roles: []string{"Stakeholder", "Prod Team Leader", "Social Manager"}},
		{Address: "g1ze29pqxcqm6nvuxe9klytzwtlnjvnrlvxpw7n0", Roles: []string{"Stakeholder", "Prod Team Member", "Social Manager"}},
		{Address: "g1t7fhyklsrxzxfs3re9xl209jkm6zkph9maq60u", Roles: []string{"Stakeholder", "Prod Team Member"}},
		{Address: "g12vcdv85v76zt7g30nhypflz0mah5m2k0xculfu", Roles: []string{"Freelance", "Core Tech Infra", "Tech Team Member"}},
		{Address: "g1ptgt9u7qlx4zpxuvenma7x00dyxpccdtjx79mw", Roles: []string{"Freelance", "Core Tech Infra", "Tech Team Member"}},
		{Address: "g1l8lqskkyk8emjhpvr2r373x36lp5jkxj048s9a", Roles: []string{"Freelance", "Core Tech Infra", "Tech Team Member"}},
		{Address: "g1tqys7x6qmrlx9ed0ja7kj6fmuqa828h58xpj8s", Roles: []string{"Freelance", "Core Tech Infra", "Tech Team Member"}},
		{Address: "g18kf8lhnjk4w5hd2lkw3jdnnz080rpv9ruaeuew", Roles: []string{"Freelance", "Tech Team Member"}},
		{Address: "g1akuqxxqujqwflhguf2vnqju7q80hsvuvvcxt20", Roles: []string{"Freelance", "Tech Team Member"}},
		{Address: "g15vusdwvva5ts8e4ad6muf6kscwan4apjmx0ttr", Roles: []string{"Freelance", "Tech Team Member"}},
		{Address: "g1pd70dkx6znsca8hc82jekxqdxuvkjwft2wvpwm", Roles: []string{"Freelance", "Accountability"}},
		{Address: "g1w3yvd9nryul7rxpfs092564c4v5kh5axukl20e", Roles: []string{"Freelance", "Prod Team Member"}},
		{Address: "g14ej9fv9hewtl5g52vdtc2jd5e9l3u8w2fxy949", Roles: []string{"Freelance", "Prod Team Member"}},
		{Address: "g1xnry3thmta4fu265se8p84pmmmsk0zl53tn456", Roles: []string{"Freelance", "Prod Team Member"}},
		{Address: "g1j8vmmn3fwtgg9jj2w6pfrgut89vfwkghm5a6eq", Roles: []string{"Freelance", "Prod Team Member"}},
		{Address: "g1q2napmnjsjemxc97xntsfnvwrz7kdw4uavqkgg", Roles: []string{"Newcomer Freelance", "Tech Team Member"}},
		{Address: "g14lvagslzjpqj5ymum7v4dkf8uwnmrk9anwmzg9", Roles: []string{"Newcomer Freelance", "Tech Team Member"}},
	}

	description := `SAMOURAÏ COOP is a creative production company born in Paris, France.
	It's mission is to produce films, dapps, music, arts, ads, events and content with a high quality standards, providing it for communities, companies, start-ups, and for its own TV community.
	As the world first production company integrating a tech team, with research & development on decentralized protocols, it gives birth to new models to empower artists, users, and humans.`

	memberStore := basedao.NewMembersStore(initialRoles, initialMembers)
	adminCond := daocond.And(daocond.RoleCount(1, "CEO", memberStore.HasRole), daocond.RoleThreshold(0.66, "Stakeholder", memberStore.HasRole, memberStore.CountMembersWithRole))

	DAO, daoPrivate = basedao.New(&basedao.Config{
		Name:             "Samouraï Coop",
		Description:      description,
		ImageURI:         "https://media.licdn.com/dms/image/v2/C4D16AQHbPggOTGi5WQ/profile-displaybackgroundimage-shrink_200_800/profile-displaybackgroundimage-shrink_200_800/0/1637001413868?e=2147483647&v=beta&t=7mLA4GcBE83RLpdKGehBFfYfr80WA5KRY_LnMXpTBAY",
		Members:          memberStore,
		GetProfileString: profile.GetStringField,
		SetProfileString: profile.SetStringField,
		InitialCondition: adminCond,
	})

	resources := []daokit.Resource{
		{
			Condition:   adminCond,
			Handler:     daokit.NewInstantExecuteHandler(),
			DisplayName: "Create, vote and execute a proposal",
			Description: "This proposal allows you to create, vote and execute a proposal. Meant to be used in a context where Samourai is a member of another DAO",
		},
		{
			Condition:   adminCond,
			Handler:     daokit.NewExecuteLambdaHandler(),
			DisplayName: "Execute Arbitrary Code",
			Description: "This proposal allows you to execute any message, it have to be carefully as it can break or modify in an unexpected way the DAO state.",
		},
		{
			Condition: daocond.And(
				daocond.And(
					daocond.RoleThreshold(0.66, "Stakeholder", memberStore.HasRole, memberStore.CountMembersWithRole),
					daocond.RoleThreshold(0.66, "Employee", memberStore.HasRole, memberStore.CountMembersWithRole),
				),
				daocond.RoleThreshold(0.33, "Freelance", memberStore.HasRole, memberStore.CountMembersWithRole),
			),
			Handler:     NewChangeCEOHandler(daoPrivate),
			DisplayName: "Elect a new CEO",
			Description: "This proposal allows you to elect a new CEO for the Samouraï Coop. The new CEO will be elected for 4 years and will be responsible for the strategic direction of the cooperative. The CEO can be revoked by vote of leaders, employees, and core members if a new strategic candidate emerges.",
		},
		{
			Condition:   daocond.RoleCount(1, "Social Manager", memberStore.HasRole),
			Handler:     NewCreatePostHandler(samBlog),
			DisplayName: "New Post",
			Description: "This proposal allows you to create a new post on the Samouraï Coop blog. The post will be published on the blog and will be visible to all users.",
		},
		{
			Condition: daocond.And(
				daocond.RoleCount(1, "CEO", memberStore.HasRole),
				daocond.RoleThreshold(0.3, "Stakeholder", memberStore.HasRole, memberStore.CountMembersWithRole),
			),
			Handler:     NewAddStakeholderHandler(daoPrivate),
			DisplayName: "New Stakeholder",
			Description: "This proposal allows you to elect a new stakeholder for the Samouraï Coop. The stakeholder will be added to the list of stakeholders and will be able to vote on CEO scope decisions, including major investments and leadership elections, and receive a share of company net revenues.",
		},
		{
			Condition: daocond.And(
				daocond.RoleCount(1, "CEO", memberStore.HasRole),
				daocond.RoleThreshold(0.3, "Stakeholder", memberStore.HasRole, memberStore.CountMembersWithRole),
			),
			Handler:     NewElectDivisionLeaderHandler(daoPrivate),
			DisplayName: "Elect a new division leader",
			Description: "This proposal allows you to elect a new division leader for the Samouraï Coop. The division leader will be added to the list of division leaders and will be in charge of the members and projects of the division.",
		},
		{
			Condition:   daocond.RoleCount(1, "Prod Team Leader", memberStore.HasRole),
			Handler:     NewCreateProdProjectHandler(pm),
			DisplayName: "New Prod Project",
			Description: "This proposal allows you to create a new prod project for the Samouraï Coop. The project will be added to the list of prod projects and will be visible to all users.",
		},
		{
			Condition:   daocond.RoleCount(1, "Tech Team Leader", memberStore.HasRole),
			Handler:     NewCreateTechProjectHandler(pm),
			DisplayName: "New Tech Project",
			Description: "This proposal allows you to create a new tech project for the Samouraï Coop. The project will be added to the list of tech projects and will be visible to all users.",
		},
		{
			Condition: daocond.And(
				daocond.RoleThreshold(0.66, "Stakeholder", memberStore.HasRole, memberStore.CountMembersWithRole),
				daocond.RoleCount(1, "Accountability", memberStore.HasRole),
			),
			Handler:     NewCreatePayrollHandler(daoPrivate),
			DisplayName: "New Payrolls",
			Description: "This proposal allows you to create new payrolls for a beneficiary.",
		},
	}

	for _, resource := range resources {
		daoPrivate.Core.Resources.Set(&resource)
	}
}

func Vote(proposalID uint64, vote daocond.Vote) {
	DAO.Vote(proposalID, vote)
}

func Execute(proposalID uint64) {
	crossing()
	DAO.Execute(proposalID)
}

func GetProposal(id uint64) *daokit.Proposal {
	return daoPrivate.Core.Proposals.GetProposal(id)
}
